////////////////////////////////////////////////////////////
//
// SFML-RPG - A top-down RPG demo
// 
// Author - Alex Capsambelis
//
////////////////////////////////////////////////////////////

#ifndef SFML_RPG_GUI
#define SFML_RPG_GUI

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#include <vector>

#include <SFML\Graphics.hpp>

#include "Character\Player.hpp"

namespace rpg {

	////////////////////////////////////////////////////////////
	/// \brief Graphical view of Player information
	///
	////////////////////////////////////////////////////////////
	class Gui
	{
	public:

		////////////////////////////////////////////////////////////
		/// \brief Default constructor
		///
		/// Creates an empty GUI.
		///
		////////////////////////////////////////////////////////////
		Gui();

		////////////////////////////////////////////////////////////
		/// \brief Destructor
		///
		////////////////////////////////////////////////////////////
		~Gui();
		
		////////////////////////////////////////////////////////////
		/// \brief Initalize member variables
		///
		/// \param gui_view view that will show Gui elements
		///
		////////////////////////////////////////////////////////////
		void initialize(sf::View gui_view);

		////////////////////////////////////////////////////////////
		/// \brief Draw the Gui to the screen
		///
		/// \param window to draw elements on
		///
		////////////////////////////////////////////////////////////
		void draw(sf::RenderWindow& window);

		////////////////////////////////////////////////////////////
		/// \brief Update gui based on player data
		///
		///	Sets healthbar to a scalar size of player health
		///
		/// \param player to pull data from
		///
		////////////////////////////////////////////////////////////
		void update(Player player);

	private:

		////////////////////////////////////////////////////////////
		// Member data
		////////////////////////////////////////////////////////////
		const sf::Vector2f PIXELBUFFER    ///< Buffer for seperation from corner
			= sf::Vector2f(20.0f, 20.0f); ///< (20 pixels in each direction)
		sf::View           gui_view;      ///< View that shows healthbar
		sf::RectangleShape healthbar;     ///< healthbar based on player health
	};

} // namespace rpg

#endif // SFML_RPG_GUI
