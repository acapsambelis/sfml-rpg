////////////////////////////////////////////////////////////
//
// SFML-RPG - A top-down RPG demo
// 
// Author - Alex Capsambelis
//
////////////////////////////////////////////////////////////

#ifndef SFML_RPG_DISPLAY
#define SFML_RPG_DISPLAY

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#include <SFML\Graphics.hpp>

#include "Character\Player.hpp"
#include "WorldItems\World.hpp"
#include "Gui.hpp"

namespace rpg {

	////////////////////////////////////////////////////////////
	/// \brief Graphical view of demo
	///
	////////////////////////////////////////////////////////////
	class Display
	{
	public:

		////////////////////////////////////////////////////////////
		/// \brief Default constructor
		///
		/// Initializes all member variables
		///
		////////////////////////////////////////////////////////////
		Display();

		////////////////////////////////////////////////////////////
		/// \brief Destructor
		///
		////////////////////////////////////////////////////////////
		~Display();

		////////////////////////////////////////////////////////////
		/// \brief Sets the player's sprite's texture to the atlas
		///
		/// \param player to add texture to
		///
		////////////////////////////////////////////////////////////
		void initialize_player(Player& player);

		////////////////////////////////////////////////////////////
		/// \brief Sets the world's textures to the atlas
		///
		/// \param world to add texture to
		///
		////////////////////////////////////////////////////////////
		void initialize_world(World& world);

		////////////////////////////////////////////////////////////
		/// \brief Resets and centers view based on player movements
		///
		/// \param player to get position from
		///
		////////////////////////////////////////////////////////////
		void tick_reset(Player player);

		////////////////////////////////////////////////////////////
		/// \brief Draws updated objects to the screen
		///
		/// \param player to be drawn
		/// \param world to be drawn
		///
		////////////////////////////////////////////////////////////
		void draw_tick(Player player, World world);

		////////////////////////////////////////////////////////////
		/// \brief Closes the SFML window
		///
		////////////////////////////////////////////////////////////
		void close();

	private:

		////////////////////////////////////////////////////////////
		// Member data
		////////////////////////////////////////////////////////////
		sf::VideoMode    current_mode; ///< Used for display sizes
		sf::RenderWindow window;       ///< Window for all displaying
		sf::View         world_view;   ///< View for WorldObjects
		sf::View         gui_view;     ///< View for Gui elements
		sf::Texture      atlas;        ///< Texture for all WorldObjets
		Gui              gui;          ///< Gui for displays
	};

} // namespace rpg

#endif // SFML_RPG_DISPLAY
